<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:Pluralsight.Learner.WPF">
  <Color x:Key="psOrange">#F15B2A</Color>
  <Color x:Key="psOrangeDark">#C04820</Color>
  <Color x:Key="psOrangeLight">#F37B53</Color>
  <Color x:Key="greyBlack">#181818</Color>
  <Color x:Key="darkGrey">#222222</Color>
  <Color x:Key="midGrey">#363636</Color>
  <Color x:Key="lightGrey">#aaaaaa</Color>
  <Color x:Key="completedGreen">#23aa5a</Color>
  <SolidColorBrush x:Key="psOrangeBrush" Color="{StaticResource psOrange}" />
  <SolidColorBrush x:Key="psOrangeDarkBrush" Color="{StaticResource psOrangeDark}" />
  <SolidColorBrush x:Key="psOrangeLightBrush" Color="{StaticResource psOrangeLight}" />
  <SolidColorBrush x:Key="completedGreenBrush" Color="{StaticResource completedGreen}" />
  <SolidColorBrush x:Key="darkBackgroundBrush" Color="{StaticResource greyBlack}" />
  <SolidColorBrush x:Key="darkGreyBrush" Color="{StaticResource darkGrey}" />
  <SolidColorBrush x:Key="midGreyBrush" Color="{StaticResource midGrey}" />
  <SolidColorBrush x:Key="lightGreyBrush" Color="{StaticResource lightGrey}" />
  <Style x:Key="orangeButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="border" Padding="{TemplateBinding Control.Padding}" Background="{StaticResource psOrangeBrush}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource psOrangeLightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Border.Background" Value="{StaticResource psOrangeDarkBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="Border.Background" Value="#555" />
              <Setter Property="Foreground" Value="{StaticResource lightGreyBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="orangeHyperlink" TargetType="{x:Type Hyperlink}">
    <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{StaticResource psOrangeBrush}" />
    <Style.Triggers>
      <Trigger Property="ContentElement.IsMouseOver" Value="True">
        <Setter Property="TextBlock.TextDecorations" Value="Underline" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="LeftButton" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="{TemplateBinding Control.Background}">
            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter Property="Background" Value="#444444" />
        <Setter Property="UIElement.Opacity" Value="1" />
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="False">
        <Setter Property="UIElement.Opacity" Value="0.6" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="UIElement.Opacity" Value="0.2" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="CenterButton" TargetType="{x:Type Button}" BasedOn="{StaticResource LeftButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="{TemplateBinding Control.Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DialogButton" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Padding="10,5" Background="{TemplateBinding Control.Background}" BorderThickness="1" BorderBrush="{StaticResource lightGreyBrush}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="#363636" />
      </Trigger>
      <Trigger Property="IsPressed" Value="False">
        <Setter Property="Background" Value="{StaticResource darkGreyBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="False">
        <Setter Property="UIElement.Opacity" Value="0.6" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="UIElement.Opacity" Value="0.2" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="DialogSimpleButton" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Padding="5,0" Background="{TemplateBinding Control.Background}" BorderThickness="1" BorderBrush="{StaticResource lightGreyBrush}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="#363636" />
      </Trigger>
      <Trigger Property="IsPressed" Value="False">
        <Setter Property="Background" Value="{StaticResource darkGreyBrush}" />
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="False">
        <Setter Property="UIElement.Opacity" Value="0.6" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="UIElement.Opacity" Value="0.2" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="LeftButtonBlack" TargetType="{x:Type Button}" BasedOn="{StaticResource LeftButton}">
    <Setter Property="Background" Value="#FF000000" />
    <Setter Property="Foreground" Value="#FFFFFFFF" />
  </Style>
  <Style x:Key="CenterButtonBlack" TargetType="{x:Type Button}" BasedOn="{StaticResource CenterButton}">
    <Setter Property="Background" Value="#FF000000" />
    <Setter Property="Foreground" Value="#FFFFFFFF" />
  </Style>
  <Style x:Key="LeftButtonGray22" TargetType="{x:Type Button}" BasedOn="{StaticResource LeftButton}">
    <Setter Property="Background" Value="#222222" />
    <Setter Property="Foreground" Value="#aaa" />
  </Style>
  <Style x:Key="CenterButtonGray22" TargetType="{x:Type Button}" BasedOn="{StaticResource CenterButton}">
    <Setter Property="Background" Value="#222222" />
    <Setter Property="Foreground" Value="#aaa" />
  </Style>
  <Style x:Key="LeftButtonGray36" TargetType="{x:Type Button}" BasedOn="{StaticResource LeftButton}">
    <Setter Property="Background" Value="#363636" />
    <Setter Property="Foreground" Value="#FFFFFFFF" />
  </Style>
  <Style x:Key="LeftButtonGray36Hover" TargetType="{x:Type Button}" BasedOn="{StaticResource LeftButton}">
    <Setter Property="Background" Value="#00FFFFFF" />
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Visibility" Value="Hidden" />
    <Style.Triggers>
      <DataTrigger Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Background" Value="#00FFFFFF" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="CenterButtonGray36" TargetType="{x:Type Button}" BasedOn="{StaticResource CenterButton}">
    <Setter Property="Background" Value="#363636" />
    <Setter Property="Foreground" Value="#aaa" />
  </Style>
  <Style x:Key="CenterButtonGray18" TargetType="{x:Type Button}" BasedOn="{StaticResource CenterButton}">
    <Setter Property="Background" Value="#181818" />
    <Setter Property="Foreground" Value="#aaa" />
  </Style>
</ResourceDictionary>